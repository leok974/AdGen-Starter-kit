name: Docker Publish & Deploy

on:
  push:
    branches: [ "main" ]
    tags: [ "v*" ]

permissions:
  contents: read
  packages: write
  id-token: write

env:
  SERVICE_NAME: adgen-api
  GAR_LOCATION: ${{ secrets.GAR_LOCATION }}          # e.g. us-central1
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}      # e.g. my-project-123
  GAR_REPOSITORY: ${{ secrets.GAR_REPOSITORY }}      # e.g. adgen

jobs:
  build-publish-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Lowercase repo name so GHCR tag is valid
      - name: Set lowercase image name + short SHA
        run: |
          echo "IMAGE_NAME_LC=${GITHUB_REPOSITORY,,}" >> $GITHUB_ENV
          echo "SHORT_SHA=${GITHUB_SHA::7}" >> $GITHUB_ENV

      # (Optional) quick unit tests before we publish
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install dev deps
        run: |
          pip install -U pip
          if [ -f adgen/requirements-dev.txt ]; then pip install -r adgen/requirements-dev.txt; fi
      - name: Lint & Test
        run: |
          if command -v ruff >/dev/null 2>&1; then ruff check .; fi
          if command -v black >/dev/null 2>&1; then black --check .; fi
          if command -v pytest >/dev/null 2>&1; then pytest -q; fi

      # Authenticate to GCP (v2 supports export_default_credentials)
      - name: Google Auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}

      - name: Configure Docker for GAR
        run: |
          gcloud auth configure-docker "${GAR_LOCATION}-docker.pkg.dev" --quiet

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build & Push (GHCR + GAR)
        run: |
          GHCR_IMAGE_SHA="ghcr.io/${{ env.IMAGE_NAME_LC }}/api:${{ env.SHORT_SHA }}"
          GHCR_IMAGE_LATEST="ghcr.io/${{ env.IMAGE_NAME_LC }}/api:latest"
          GAR_IMAGE_SHA="${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.GAR_REPOSITORY }}/api:${{ env.SHORT_SHA }}"
          GAR_IMAGE_LATEST="${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.GAR_REPOSITORY }}/api:latest"

          echo "GHCR_SHA:    $GHCR_IMAGE_SHA"
          echo "GHCR_LATEST: $GHCR_IMAGE_LATEST"
          echo "GAR_SHA:     $GAR_IMAGE_SHA"
          echo "GAR_LATEST:  $GAR_IMAGE_LATEST"

          docker buildx build \
            --platform linux/amd64 \
            --push \
            --tag "$GHCR_IMAGE_SHA" \
            --tag "$GHCR_IMAGE_LATEST" \
            --tag "$GAR_IMAGE_SHA" \
            --tag "$GAR_IMAGE_LATEST" \
            .

          echo "GAR_IMAGE_LATEST=$GAR_IMAGE_LATEST" >> $GITHUB_ENV

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy "$SERVICE_NAME" \
            --image "$GAR_IMAGE_LATEST" \
            --region "$GAR_LOCATION" \
            --platform managed \
            --allow-unauthenticated \
            --port 8080 \
