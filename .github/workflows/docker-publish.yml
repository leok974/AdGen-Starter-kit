# Replace your "Build & Push (GHCR + GAR)" step with this:
- name: Build & Push (GHCR + GAR)
  run: |
    # Strip any potential newlines from secrets and environment variables
    GAR_LOCATION_CLEAN=$(echo "${{ secrets.GAR_LOCATION }}" | tr -d '\n\r' | xargs)
    GCP_PROJECT_ID_CLEAN=$(echo "${{ secrets.GCP_PROJECT_ID }}" | tr -d '\n\r' | xargs)
    GAR_REPOSITORY_CLEAN=$(echo "${{ secrets.GAR_REPOSITORY }}" | tr -d '\n\r' | xargs)
    IMAGE_NAME_LC_CLEAN=$(echo "${{ env.IMAGE_NAME_LC }}" | tr -d '\n\r' | xargs)
    
    # Build clean tag variables
    GHCR_SHA="ghcr.io/${IMAGE_NAME_LC_CLEAN}/adgen-api:${GITHUB_SHA}"
    GHCR_LATEST="ghcr.io/${IMAGE_NAME_LC_CLEAN}/adgen-api:latest"
    GAR_SHA="${GAR_LOCATION_CLEAN}-docker.pkg.dev/${GCP_PROJECT_ID_CLEAN}/${GAR_REPOSITORY_CLEAN}/adgen-api:${GITHUB_SHA}"
    GAR_LATEST="${GAR_LOCATION_CLEAN}-docker.pkg.dev/${GCP_PROJECT_ID_CLEAN}/${GAR_REPOSITORY_CLEAN}/adgen-api:latest"
    
    echo "GHCR_SHA=$GHCR_SHA"
    echo "GHCR_LATEST=$GHCR_LATEST" 
    echo "GAR_SHA=$GAR_SHA"
    echo "GAR_LATEST=$GAR_LATEST"
    
    # Verify tags don't contain newlines
    if [[ "$GAR_SHA" == *$'\n'* ]] || [[ "$GAR_SHA" == *$'\r'* ]]; then
      echo "ERROR: GAR_SHA contains newline characters"
      exit 1
    fi
    
    # Verify Dockerfile exists
    if [ ! -f "adgen/api/Dockerfile" ]; then
      echo "Error: Dockerfile not found at adgen/api/Dockerfile"
      exit 1
    fi
    
    # Build and push
    docker buildx build \
      --platform linux/amd64 \
      --push \
      -f adgen/api/Dockerfile \
      --tag "$GHCR_SHA" \
      --tag "$GHCR_LATEST" \
      --tag "$GAR_SHA" \
      --tag "$GAR_LATEST" \
      adgen/api/
    
    # Export for deploy step
    echo "GAR_IMAGE_SHA=$GAR_SHA" >> $GITHUB_ENV
    echo "GAR_IMAGE_LATEST=$GAR_LATEST" >> $GITHUB_ENV