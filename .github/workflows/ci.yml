name: CI
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  smoke-test:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq curl unzip

      - name: Validate Docker setup
        run: |
          docker --version
          docker compose --version

      - name: Start API in test mode
        run: |
          cd adgen
          echo "COMFY_MODE=test" >> .env
          docker compose -f docker-compose.dev.yml up -d --build
        env:
          COMPOSE_DOCKER_CLI_BUILD: 1
          DOCKER_BUILDKIT: 1

      - name: Wait for service health
        run: |
          # Wait up to 60 seconds for service to be healthy
          for i in {1..30}; do
            if curl -sf http://localhost:8000/health; then
              echo "✅ Service is healthy"
              break
            fi
            echo "⏳ Waiting for service... ($i/30)"
            sleep 2
          done

          # Verify detailed health
          curl -sf http://localhost:8000/health/detailed | jq .

      - name: Run smoke test
        run: |
          bash scripts/smoke.sh http://localhost:8000 "CI test prompt"
        env:
          TIMEOUT: 60

      - name: Test delete endpoint
        run: |
          # Generate a run to delete
          gen=$(curl -sf -X POST http://localhost:8000/generate \
            -H 'content-type: application/json' \
            -d '{"prompt":"test for deletion"}')
          run_id=$(echo "$gen" | jq -r '.run_id')
          echo "Testing delete for run: $run_id"

          # Delete it
          curl -sf -X DELETE "http://localhost:8000/runs/$run_id"

          # Verify it's gone (should return empty files list)
          files=$(curl -sf "http://localhost:8000/runs/$run_id/files")
          if [[ $(echo "$files" | jq '.files | length') != "0" ]]; then
            echo "⚠️ Delete test inconclusive (files may not have been created yet)"
          fi

      - name: Show logs on failure
        if: failure()
        run: |
          echo "=== API Logs ==="
          docker logs adgen-api || true
          echo "=== Container Status ==="
          docker ps -a

      - name: Cleanup
        if: always()
        run: |
          cd adgen
          docker compose -f docker-compose.dev.yml down --remove-orphans --volumes
          docker system prune -f

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: "3.11" }
      - name: Install and run basic linting
        run: |
          pip install flake8
          # Basic style checks (ignore line length for now)
          flake8 adgen/api/ --count --select=E9,F63,F7,F82 --show-source --statistics